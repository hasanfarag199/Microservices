name: Build and Deploy to GKE
on:
  push:
    branches:
      - main
jobs:
  cd:
    name: Setup, Build, Publish, and Deploy App to GKE
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4.2.2

    - name: Setup gcloud CLI
      uses: google-github-actions/auth@v2.1.10
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'

    - name: Get the GKE credentials
      uses: google-github-actions/get-gke-credentials@v2.3.3
      with:
        cluster_name: ${{ vars.GKE_CLUSTER }}
        location: ${{ vars.GKE_ZONE }}
    
    - name: Docker configuration
      run: |-
        gcloud --quiet auth configure-docker
        # gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://{{ vars.GKE_ZONE }}-docker.pkg.dev
    
     # Build the Docker image
    - name: Build
      run: |-
        docker buildx build \
          --tag "gcr.io/${{ secrets.GKE_PROJECT }}/${{ vars.IMAGE_NAME }}:${{ vars.IMAGE_TAG}}"
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_SHA" \
          .

    # # Push the Docker image to Google Container Registry
    # - name: Publish
    #   run: |-
    #     docker push "gcr.io/${{ secrets.GKE_PROJECT }}/${{ vars.IMAGE_NAME }}:${{ vars.IMAGE_TAG}}"
    
    # - name: Deploy
    #   run: |-
    #     kubectl apply -f deployment.yml
    #     kubectl apply -f service.yml
    
    # - name: Update image in deployment
    #   run: |-
    #     kubectl set image deployment/${{ vars.IMAGE }} ${{ vars.IMAGE }}="gcr.io/${{ secrets.GKE_PROJECT }}/${{ vars.IMAGE }}:$GITHUB_SHA" --record
    
    # - name: Wait for deployment to complete
    #   run: |-
    #     kubectl rollout status deployment/${{ vars.IMAGE }} --timeout=600s
    # - name: Test deployment
    #   run: |-
    #     curl http://34.72.136.181/products
        