name: Build and Deploy to GKE
on:
  push:
    branches:
      - main
jobs:
  cd:
    name: Setup, Build, Publish, and Deploy App to GKE
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4.2.2

    - name: Setup gcloud CLI
      uses: google-github-actions/auth@v2.1.10
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'
    
    - name: Get the GKE credentials
      uses: google-github-actions/get-gke-credentials@v2.3.3
      with:
        cluster_name: ${{ vars.GKE_CLUSTER }}
        location: ${{ vars.GKE_ZONE }}
    
    # Authenticate Docker to use Google Container Registry
    - name: Docker configuration
      run: |-
        gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://us-central1-docker.pkg.dev

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "us-central1-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/${{ vars.IMAGE_REPO }}/${{ vars.IMAGE_NAME }}:${{ vars.IMAGE_TAG}}" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
    - name: Create Artifact Registry repository if not exists
      run: |
          gcloud artifacts repositories describe microservice-repo --location=us-central1 || \
          gcloud artifacts repositories create microservice-repo \
            --repository-format=docker \
            --location=us-central1 \
            --description="Docker repository"
    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "us-central1-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/${{ vars.IMAGE_REPO }}/${{ vars.IMAGE_NAME }}:${{ vars.IMAGE_TAG}}"
    - name: replace variables in deployment.yaml
      run: |-
         export DEPLOY_IMG="us-central1-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/${{ vars.IMAGE_REPO }}/${{ vars.IMAGE_NAME }}:${{ vars.IMAGE_TAG}}"
         sudo apt-get update && sudo apt-get install -y gettext-base

    - name: Deploy
      run: |-
        envsubst < deployment.yaml | kubectl apply -f -
        kubectl apply -f service.yml
    
    # - name: Wait for deployment to complete
    #   run: |-
    #     kubectl rollout status deployment/${{ vars.IMAGE }} --timeout=600s
    - name: Test deployment
      run: |-
        curl http://34.72.136.181/products
        